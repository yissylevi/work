p("For an information about Francis Galton, visit the ",
a("wikipedia.",
href = "https://en.wikipedia.org/wiki/Francis_Galton")),
h1("Distributions of Heights"),
plotOutput("box2"),
h1("Controls - Sliders"),
sliderInput(inputId = "num", label = "Parent Heights (Inches) Above:", min = 61.7, max = 72.9, value = 61.7, step = .1, width="1300px"),
sliderInput(inputId = "num1", label = "Parents Heights (Inches) Below:", min = 64.1, max = 72.9, value = 61.7, step = .1, width="1300px"),
verbatimTextOutput("value"),
verbatimTextOutput("value1"),
plotOutput("box1")))
server <- function(input, output) {
output$value <- renderText({
paste("Parent Height is Above", as.character(input$num))
})
output$value1 <-  renderText({
paste("Parent Height is Below", as.character(input$num1))
})
output$box2<-renderPlot({
par(mfrow=c(1,2))
hist(galton$parent, , prob=TRUE, main="Distribution and Mean of Parents Height", xlab="Parents height (inches)")
x<-mean(galton$parent)
abline(v=x,col="blue")
text(x, 18 , round(x, 2))
lines(density(galton$parent, adjust=2), lty="dotted", col="darkgreen", lwd=2)
hist(galton$child, , prob=TRUE, main="Distribution and Mean of Childrens Height", xlab="Childrens height (inches)")
y<-mean(galton$child)
abline(v=y,col="blue")
text(y, 18 , round(y, 2))
lines(density(galton$child, adjust=2), lty="dotted", col="darkgreen", lwd=2)
})
output$box1<-renderPlot({
require(HistData)
require(dplyr)
require(tidyr)
parent1<-filter(galton, parent >= input$num & parent <= input$num1)
parent2<-mean(parent1$parent)
parent3<-mean(parent1$child)
means<-data.table(parent2, parent3)
boxplot(parent1, main="Childrens height relative to parents height", names=c("Parents height (inches)", "Childrens Height (inches)"))
points(1:2, means, pch=15, cex=2, col = "orange")
text(1:2, means, labels = round(means, digits = 1))})
}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(# Application title
titlePanel("Demonstration of Regression to the Mean"),
mainPanel(
p("This app demonstrates the idea of regression to the mean using the famous Galton dataset of parent and child
heights put together by Francis Galton in 1885. He did a study of heights of 898 parents and children to see if
the idea of regression to the mean (he called it regression to mediocrity) held up for them. He found that the
children of taller parents were on average shorter than their parents and the children of shorter parents are on
average taller than their parents."),
p("For an information about Francis Galton, visit the ",
a("wikipedia.",
href = "https://en.wikipedia.org/wiki/Francis_Galton")),
h1("Distributions of Heights"),
p("In these first two graph below you will find two histograms of one of a distribution of parent heights and the other of
children's heights. As you can see by the blue line the mean of both are about the same. You can also see that the heights
represent a Normal Distribution."),
plotOutput("box2"),
h1("Controls - Sliders"),
p("Choose the heights of the parents (between any range on the sliders) to see what the corresponding avarage height and distribution of heights are of the children.
Note: if you get an error that is because there is no corresponding height in the childrens dataset")
sliderInput(inputId = "num", label = "Parent Heights (Inches) Above:", min = 61.7, max = 72.9, value = 61.7, step = .1, width="1300px"),
sliderInput(inputId = "num1", label = "Parents Heights (Inches) Below:", min = 64.1, max = 72.9, value = 61.7, step = .1, width="1300px"),
verbatimTextOutput("value"),
verbatimTextOutput("value1"),
h1("Results"),
p("Then you can check out how in practice the parents and children's heights on average differ from each other. The box-plots represent quartiles.
The black line represents the median and the orange dot represents the mean and the numbers are the mean of the distribution you
choose using the slider (above)."),
p("Notice how when the parents are taller the children end up slightly shorter and when the parents are shorter the children are taller. This is called Regression to the Mean."),
plotOutput("box1")))
server <- function(input, output) {
output$value <- renderText({
paste("Parent Height is Above", as.character(input$num))
})
output$value1 <-  renderText({
paste("Parent Height is Below", as.character(input$num1))
})
output$box2<-renderPlot({
par(mfrow=c(1,2))
hist(galton$parent, , prob=TRUE, main="Distribution and Mean of Parents Height", xlab="Parents height (inches)")
x<-mean(galton$parent)
abline(v=x,col="blue")
text(x, 18 , round(x, 2))
lines(density(galton$parent, adjust=2), lty="dotted", col="darkgreen", lwd=2)
hist(galton$child, , prob=TRUE, main="Distribution and Mean of Childrens Height", xlab="Childrens height (inches)")
y<-mean(galton$child)
abline(v=y,col="blue")
text(y, 18 , round(y, 2))
lines(density(galton$child, adjust=2), lty="dotted", col="darkgreen", lwd=2)
})
output$box1<-renderPlot({
require(HistData)
require(dplyr)
require(tidyr)
parent1<-filter(galton, parent >= input$num & parent <= input$num1)
parent2<-mean(parent1$parent)
parent3<-mean(parent1$child)
means<-data.table(parent2, parent3)
boxplot(parent1, main="Childrens height relative to parents height", names=c("Parents height (inches)", "Childrens Height (inches)"))
points(1:2, means, pch=15, cex=2, col = "orange")
text(1:2, means, labels = round(means, digits = 1))})
}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(# Application title
titlePanel("Demonstration of Regression to the Mean"),
mainPanel(
p("This app demonstrates the idea of regression to the mean using the famous Galton dataset of parent and child
heights put together by Francis Galton in 1885. He did a study of heights of 898 parents and children to see if
the idea of regression to the mean (he called it regression to mediocrity) held up for them. He found that the
children of taller parents were on average shorter than their parents and the children of shorter parents are on
average taller than their parents."),
p("For an information about Francis Galton, visit the ",
a("wikipedia.",
href = "https://en.wikipedia.org/wiki/Francis_Galton")),
h1("Distributions of Heights"),
p("In these first two graph below you will find two histograms of one of a distribution of parent heights and the other of children's heights. As you can see by the blue line the mean of both are about the same. You can also see that the heights represent a Normal Distribution."),
plotOutput("box2"),
h1("Controls - Sliders"),
p("Choose the heights of the parents (between any range on the sliders) to see what the corresponding avarage height and distribution of heights are of the children."),
p("Note: if you get an error that is because there is no corresponding height in the childrens dataset"),
sliderInput(inputId = "num", label = "Parent Heights (Inches) Above:", min = 61.7, max = 72.9, value = 61.7, step = .1, width="1300px"),
sliderInput(inputId = "num1", label = "Parents Heights (Inches) Below:", min = 64.1, max = 72.9, value = 61.7, step = .1, width="1300px"),
verbatimTextOutput("value"),
verbatimTextOutput("value1"),
h1("Results"),
p("Then you can check out how in practice the parents and children's heights on average differ from each other. The box-plots represent quartiles.
The black line represents the median and the orange dot represents the mean and the numbers are the mean of the distribution you
choose using the slider (above)."),
p("Notice how when the parents are taller the children end up slightly shorter and when the parents are shorter the children are taller. This is called Regression to the Mean."),
plotOutput("box1")))
server <- function(input, output) {
output$value <- renderText({
paste("Parent Height is Above", as.character(input$num))
})
output$value1 <-  renderText({
paste("Parent Height is Below", as.character(input$num1))
})
output$box2<-renderPlot({
par(mfrow=c(1,2))
hist(galton$parent, , prob=TRUE, main="Distribution and Mean of Parents Height", xlab="Parents height (inches)")
x<-mean(galton$parent)
abline(v=x,col="blue")
text(x, 18 , round(x, 2))
lines(density(galton$parent, adjust=2), lty="dotted", col="darkgreen", lwd=2)
hist(galton$child, , prob=TRUE, main="Distribution and Mean of Childrens Height", xlab="Childrens height (inches)")
y<-mean(galton$child)
abline(v=y,col="blue")
text(y, 18 , round(y, 2))
lines(density(galton$child, adjust=2), lty="dotted", col="darkgreen", lwd=2)
})
output$box1<-renderPlot({
require(HistData)
require(dplyr)
require(tidyr)
parent1<-filter(galton, parent >= input$num & parent <= input$num1)
parent2<-mean(parent1$parent)
parent3<-mean(parent1$child)
means<-data.table(parent2, parent3)
boxplot(parent1, main="Childrens height relative to parents height", names=c("Parents height (inches)", "Childrens Height (inches)"))
points(1:2, means, pch=15, cex=2, col = "orange")
text(1:2, means, labels = round(means, digits = 1))})
}
shinyApp(ui = ui, server = server)
and the overall distribution of heights of the children."),
library(shiny)
ui <- fluidPage(# Application title
titlePanel("Demonstration of Regression to the Mean"),
mainPanel(
p("This app demonstrates the idea of regression to the mean using the famous Galton dataset of parent and child
heights put together by Francis Galton in 1885. He did a study of heights of 898 parents and children to see if
the idea of regression to the mean (he called it regression to mediocrity) held up for them. He found that the
children of taller parents were on average shorter than their parents and the children of shorter parents are on
average taller than their parents."),
p("For an information about Francis Galton, visit the ",
a("wikipedia.",
href = "https://en.wikipedia.org/wiki/Francis_Galton")),
h1("Distributions of Heights"),
p("In these first two graphs below you will find two histograms. One is of a distribution of parents heights and the
other of their children's heights. As you can see by the blue line the mean (or average) of both parents and their
children are about the same. You can also see that the distribution of heights represent a Normal Distribution."),
plotOutput("box2"),
h1("Controls - Sliders"),
p("Choose the heights of the parents (between any range on the sliders) to see the corresponding mean (average) height
and the overall distribution of heights of the children."),
p("Note: if you get an error that is because there is no corresponding height in the children's dataset."),
sliderInput(inputId = "num", label = "Parent Heights (Inches) Above:", min = 61.7, max = 72.9, value = 61.7, step = .1, width="1300px"),
sliderInput(inputId = "num1", label = "Parents Heights (Inches) Below:", min = 64.1, max = 72.9, value = 61.7, step = .1, width="1300px"),
verbatimTextOutput("value"),
verbatimTextOutput("value1"),
h1("Results"),
p("Here you can see how, in practice, the parents and children's heights, on average, differ from each other. The box-plots represent quartiles. The black line in the middle represents the median and the orange dot and the numbers inside the box are the mean of the distribution that you chose using the slider (above)."),
p("Notice how when the parents are taller the children end up slightly shorter and when the parents are shorter the children are taller. This is called Regression to the Mean."),
plotOutput("box1")))
server <- function(input, output) {
output$value <- renderText({
paste("Parent Height is Above", as.character(input$num))
})
output$value1 <-  renderText({
paste("Parent Height is Below", as.character(input$num1))
})
output$box2<-renderPlot({
par(mfrow=c(1,2))
hist(galton$parent, , prob=TRUE, main="Distribution and Mean of Parents Height", xlab="Parents height (inches)")
x<-mean(galton$parent)
abline(v=x,col="blue")
text(x, 18 , round(x, 2))
lines(density(galton$parent, adjust=2), lty="dotted", col="darkgreen", lwd=2)
hist(galton$child, , prob=TRUE, main="Distribution and Mean of Childrens Height", xlab="Childrens height (inches)")
y<-mean(galton$child)
abline(v=y,col="blue")
text(y, 18 , round(y, 2))
lines(density(galton$child, adjust=2), lty="dotted", col="darkgreen", lwd=2)
})
output$box1<-renderPlot({
require(HistData)
require(dplyr)
require(tidyr)
parent1<-filter(galton, parent >= input$num & parent <= input$num1)
parent2<-mean(parent1$parent)
parent3<-mean(parent1$child)
means<-data.table(parent2, parent3)
boxplot(parent1, main="Childrens height relative to parents height", names=c("Parents height (inches)", "Childrens Height (inches)"))
points(1:2, means, pch=15, cex=2, col = "orange")
text(1:2, means, labels = round(means, digits = 1))})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(# Application title
titlePanel("An Interactive App Demonstrating the Concept of Regression to the Mean"),
h3("By Levi Brackman")
mainPanel(
p("This app demonstrates the idea of regression to the mean using the famous Galton dataset of parent and child
heights put together by Francis Galton in 1885. He did a study of heights of 898 parents and children to see if
the idea of regression to the mean (he called it regression to mediocrity) held up for them. He found that the
children of taller parents were on average shorter than their parents and the children of shorter parents are on
average taller than their parents."),
p("For an information about Francis Galton, visit the ",
a("wikipedia.",
href = "https://en.wikipedia.org/wiki/Francis_Galton")),
h2("Distributions of Heights"),
p("In these first two graphs below you will find two histograms. One is of a distribution of parents heights and the
other of their children's heights. As you can see by the blue line the mean (or average) of both parents and their
children are about the same. You can also see that the distribution of heights represent a Normal Distribution."),
plotOutput("box2"),
h2("Controls - Sliders"),
p("Choose the heights of the parents (between any range on the sliders) to see the corresponding mean (average) height
and the overall distribution of heights of the children."),
p("Note: if you get an error that is because there is no corresponding height in the children's dataset."),
sliderInput(inputId = "num", label = "Parent Heights (Inches) Above:", min = 61.7, max = 72.9, value = 61.7, step = .1, width="1300px"),
sliderInput(inputId = "num1", label = "Parents Heights (Inches) Below:", min = 64.1, max = 72.9, value = 61.7, step = .1, width="1300px"),
verbatimTextOutput("value"),
verbatimTextOutput("value1"),
h2("Results"),
p("Here you can see how, in practice, the parents and children's heights, on average, differ from each other. The box-plots represent quartiles. The black line in the middle represents the median and the orange dot and the numbers inside the box are the mean of the distribution that you chose using the slider (above)."),
p("Notice how when the parents are taller the children end up slightly shorter and when the parents are shorter the children are taller. This is called Regression to the Mean."),
plotOutput("box1")))
server <- function(input, output) {
output$value <- renderText({
paste("Parent Height is Above", as.character(input$num))
})
output$value1 <-  renderText({
paste("Parent Height is Below", as.character(input$num1))
})
output$box2<-renderPlot({
par(mfrow=c(1,2))
hist(galton$parent, , prob=TRUE, main="Distribution and Mean of Parents Height", xlab="Parents height (inches)")
x<-mean(galton$parent)
abline(v=x,col="blue")
text(x, 18 , round(x, 2))
lines(density(galton$parent, adjust=2), lty="dotted", col="darkgreen", lwd=2)
hist(galton$child, , prob=TRUE, main="Distribution and Mean of Childrens Height", xlab="Childrens height (inches)")
y<-mean(galton$child)
abline(v=y,col="blue")
text(y, 18 , round(y, 2))
lines(density(galton$child, adjust=2), lty="dotted", col="darkgreen", lwd=2)
})
output$box1<-renderPlot({
require(HistData)
require(dplyr)
require(tidyr)
parent1<-filter(galton, parent >= input$num & parent <= input$num1)
parent2<-mean(parent1$parent)
parent3<-mean(parent1$child)
means<-data.table(parent2, parent3)
boxplot(parent1, main="Childrens height relative to parents height", names=c("Parents height (inches)", "Childrens Height (inches)"))
points(1:2, means, pch=15, cex=2, col = "orange")
text(1:2, means, labels = round(means, digits = 1))})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(# Application title
titlePanel("An Interactive App Demonstrating the Concept of Regression to the Mean"),
h3("By Levi Brackman"),
mainPanel(
p("This app demonstrates the idea of regression to the mean using the famous Galton dataset of parent and child
heights put together by Francis Galton in 1885. He did a study of heights of 898 parents and children to see if
the idea of regression to the mean (he called it regression to mediocrity) held up for them. He found that the
children of taller parents were on average shorter than their parents and the children of shorter parents are on
average taller than their parents."),
p("For an information about Francis Galton, visit the ",
a("wikipedia.",
href = "https://en.wikipedia.org/wiki/Francis_Galton")),
h2("Distributions of Heights"),
p("In these first two graphs below you will find two histograms. One is of a distribution of parents heights and the
other of their children's heights. As you can see by the blue line the mean (or average) of both parents and their
children are about the same. You can also see that the distribution of heights represent a Normal Distribution."),
plotOutput("box2"),
h2("Controls - Sliders"),
p("Choose the heights of the parents (between any range on the sliders) to see the corresponding mean (average) height
and the overall distribution of heights of the children."),
p("Note: if you get an error that is because there is no corresponding height in the children's dataset."),
sliderInput(inputId = "num", label = "Parent Heights (Inches) Above:", min = 61.7, max = 72.9, value = 61.7, step = .1, width="1300px"),
sliderInput(inputId = "num1", label = "Parents Heights (Inches) Below:", min = 64.1, max = 72.9, value = 61.7, step = .1, width="1300px"),
verbatimTextOutput("value"),
verbatimTextOutput("value1"),
h2("Results"),
p("Here you can see how, in practice, the parents and children's heights, on average, differ from each other. The box-plots represent quartiles. The black line in the middle represents the median and the orange dot and the numbers inside the box are the mean of the distribution that you chose using the slider (above)."),
p("Notice how when the parents are taller the children end up slightly shorter and when the parents are shorter the children are taller. This is called Regression to the Mean."),
plotOutput("box1")))
server <- function(input, output) {
output$value <- renderText({
paste("Parent Height is Above", as.character(input$num))
})
output$value1 <-  renderText({
paste("Parent Height is Below", as.character(input$num1))
})
output$box2<-renderPlot({
par(mfrow=c(1,2))
hist(galton$parent, , prob=TRUE, main="Distribution and Mean of Parents Height", xlab="Parents height (inches)")
x<-mean(galton$parent)
abline(v=x,col="blue")
text(x, 18 , round(x, 2))
lines(density(galton$parent, adjust=2), lty="dotted", col="darkgreen", lwd=2)
hist(galton$child, , prob=TRUE, main="Distribution and Mean of Childrens Height", xlab="Childrens height (inches)")
y<-mean(galton$child)
abline(v=y,col="blue")
text(y, 18 , round(y, 2))
lines(density(galton$child, adjust=2), lty="dotted", col="darkgreen", lwd=2)
})
output$box1<-renderPlot({
require(HistData)
require(dplyr)
require(tidyr)
parent1<-filter(galton, parent >= input$num & parent <= input$num1)
parent2<-mean(parent1$parent)
parent3<-mean(parent1$child)
means<-data.table(parent2, parent3)
boxplot(parent1, main="Childrens height relative to parents height", names=c("Parents height (inches)", "Childrens Height (inches)"))
points(1:2, means, pch=15, cex=2, col = "orange")
text(1:2, means, labels = round(means, digits = 1))})
}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(# Application title
titlePanel("An Interactive App Demonstrating the Concept of Regression to the Mean"),
h3("By Levi Brackman"),
mainPanel(
p("This app demonstrates the idea of regression to the mean using the famous Galton dataset of parent and child
heights put together by Francis Galton in 1885. He did a study of heights of 898 parents and children to see if
the idea of regression to the mean (he called it regression to mediocrity) held up for them. He found that the
children of taller parents were on average shorter than their parents and the children of shorter parents are on
average taller than their parents."),
p("For an information about Francis Galton, visit the ",
a("wikipedia.",
href = "https://en.wikipedia.org/wiki/Francis_Galton")),
h2("Distributions of Heights"),
p("In these first two graphs below you will find two histograms. One is of a distribution of parents heights and the
other of their children's heights. As you can see by the blue line the mean (or average) of both parents and their
children are about the same. You can also see that the distribution of heights represent a Normal Distribution."),
plotOutput("box2"),
h2("Controls - Sliders"),
p("Choose the heights of the parents (between any range on the sliders) to see the corresponding mean (average) height
and the overall distribution of heights of the children."),
p("Note: if you get an error that is because there is no corresponding height in the children's dataset."),
sliderInput(inputId = "num", label = "Parent Heights (Inches) Above:", min = 61.7, max = 72.9, value = 61.7, step = .1, width="1300px"),
sliderInput(inputId = "num1", label = "Parents Heights (Inches) Below:", min = 64.1, max = 72.9, value = 61.7, step = .1, width="1300px"),
verbatimTextOutput("value"),
verbatimTextOutput("value1"),
h2("Results"),
p("Here you can see how, in practice, the parents and children's heights, on average, differ from each other. The box-plots represent quartiles. The black line in the middle represents the median and the orange dot and the numbers inside the box are the mean of the distribution that you chose using the slider (above)."),
p("Notice how when the parents are taller the children end up slightly shorter and when the parents are shorter the children are taller. This is called Regression to the Mean."),
plotOutput("box1")))
server <- function(input, output) {
output$value <- renderText({
paste("Parent Height is Above", as.character(input$num))
})
output$value1 <-  renderText({
paste("Parent Height is Below", as.character(input$num1))
})
output$box2<-renderPlot({
par(mfrow=c(1,2))
hist(galton$parent, , prob=TRUE, main="Distribution and Mean of Parents Height", xlab="Parents height (inches)")
x<-mean(galton$parent)
abline(v=x,col="blue")
text(x, 18 , round(x, 2))
lines(density(galton$parent, adjust=2), lty="dotted", col="darkgreen", lwd=2)
hist(galton$child, , prob=TRUE, main="Distribution and Mean of Childrens Height", xlab="Childrens height (inches)")
y<-mean(galton$child)
abline(v=y,col="blue")
text(y, 18 , round(y, 2))
lines(density(galton$child, adjust=2), lty="dotted", col="darkgreen", lwd=2)
})
output$box1<-renderPlot({
require(HistData)
require(dplyr)
require(tidyr)
parent1<-filter(galton, parent >= input$num & parent <= input$num1)
parent2<-mean(parent1$parent)
parent3<-mean(parent1$child)
means<-data.table(parent2, parent3)
boxplot(parent1, main="Childrens height relative to parents height", names=c("Parents height (inches)", "Childrens Height (inches)"))
points(1:2, means, pch=15, cex=2, col = "orange")
text(1:2, means, labels = round(means, digits = 1))})
}
shinyApp(ui = ui, server = server)
require(devtools)
setwd("~/Dropbox/Git/stats/Statistics_Articles")
shiny::runApp()
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
write.csv(galton. "galton.csv")
write.csv(galton, "galton.csv")
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
?read.csv
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
?data.table
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
shiny::runApp('regression_to_mean_app')
72/12
65/12
64/12
data <- read.csv("~/Dropbox/Git/stats/allsurveysYT1_Jan2016.csv", header=T)
APSI<-select(data, APSI_1, APSI_2,  APSI_3,  APSI_4,  APSI_5,  APSI_6, APSI_7, APSI_8)
APSI$APSI_6  <-  6- APSI$APSI_6
APSI<-tbl_df(APSI)
APSI
str(APSI)
colnames(APSI) <- c("1","2","3","4","5","6","7","8")
Targ_key <- make.keys(8,list(f1=1:8))
Targ_key <- scrub(Targ_key,isvalue=1)  #fix the 0s, allow the NAs to be estimated
Targ_key <- list(Targ_key)
APSI_cor <- corFiml(APSI)
out_targetQ <- fa(APSI_cor,1,rotate="TargetQ",Target=Targ_key) #TargetT for orthogonal rotation
out_targetQ[c("loadings", "score.cor", "TLI", "RMSEA")]
out_targetQ
out_targetQ[c("loadings", "score.cor", "TLI", "RMSEA")]
out_targetQ
1-((out_targetQ$STATISTIC - out_targetQ$dof)/(out_targetQ$null.chisq- out_targetQ$null.dof))
out_targetQ[c("loadings", "score.cor", "TLI", "RMSEA")]
out_targetQ[c("loadings", "score.cor", "TLI", "RMSEA")]
out_targetQ[c( "score.cor", "TLI", "RMSEA")]
out_targetQ
library(GPArotation)
data <- read.csv("~/Dropbox/Git/stats/allsurveysYT1_Jan2016.csv", header=T)
APSI<-select(data, APSI_1, APSI_2,  APSI_4,  APSI_5,  APSI_7,  APSI_8, APSI_3, APSI_6)
APSI$APSI_6  <-  6- APSI$APSI_6
APSI<- data.frame(apply(APSI,2, as.numeric))
colnames(APSI) <- c("1","2","3","4","5","6","7","8")
Targ_key <- make.keys(8,list(f1=1:6, f2=7:8))
Targ_key <- scrub(Targ_key,isvalue=1)  #fix the 0s, allow the NAs to be estimated
Targ_key <- list(Targ_key)
APSI_cor <- corFiml(APSI)
out_targetQ <- fa(APSI_cor,2,rotate="TargetQ",Target=Targ_key) #TargetT for orthogonal rotation
out_targetQ[c("loadings", "score.cor", "TLI", "RMSEA")]
out_targetQ
summary(out_targetQ)
print(out_targetQ, Table=TRUE)
out_targetQ[c("loadings", "score.cor", "TLI", "RMSEA")]
out_targetQ <- fa(APSI_cor,1,rotate="TargetT",Target=Targ_key) #TargetT for orthogonal rotation
out_targetQ[c("loadings", "score.cor", "TLI", "RMSEA")]
out_targetQ
summary(out_targetQ)
print(out_targetQ, Table=TRUE)
require(psych)
summary(out_targetQ)
print(out_targetQ, Table=TRUE)
colnames(APSI) <- c("1","2","3","4","5","6","7","8")
#Target rotation: choose "simple structure" a priori and can be applied to oblique and orthogonal rotation based on
#what paper says facotrs should be APSI
Targ_key <- make.keys(8,list(f1=1:6, f2=7:8))
Targ_key <- scrub(Targ_key,isvalue=1)  #fix the 0s, allow the NAs to be estimated
Targ_key <- list(Targ_key)
APSI_cor <- corFiml(APSI)
out_targetQ <- fa(APSI_cor,2,rotate="TargetQ",Target=Targ_key) #TargetT for orthogonal rotation
out_targetQ[c("loadings", "score.cor", "TLI", "RMSEA")]
out_targetQ
#The best fit to the data seems to be three factors. F1: questions 1,3,5,6. f2: 8,7,4. f3: 2,9
```
CFI
```{r}
1-((out_targetQ$STATISTIC - out_targetQ$dof)/(out_targetQ$null.chisq- out_targetQ$null.dof))
